<%- include('partials/header') %>

  <%
    const monthNames = ["January", "February", "March","April", "May", "June", "July","August", "September", "October","November", "December"];
    var date = new Date();
    const fullDate = monthNames[date.getMonth()] + ", " + date.getDate(); 
  %>

  <div id="page">
    <div class="hero">

      <p id="date"><%= fullDate %></p>

      <a href="/premium" title="check out our premium plan!"><img id="crown" src="/icons/crown.png" /></a>

      <div id="circle">
        <!-- <div id="circle-cover"></div> -->
        <p>0 cal <br /> <span>/3500</span></p>
      </div>

      <div id="total-macros">
        <div class="macros-card" id="protein">
          <p>protein</p>
          <div class="m-bar">
            <div class="progress"></div>
          </div>
          <p>130 gr <small> /50</small></p>
        </div>
        <div class="macros-card" id="fats">
          <p>fats</p>
          <div class="m-bar">
            <div class="progress"></div>
          </div>
          <p>80 gr <small> /50</small></p>
        </div>
        <div class="macros-card" id="carbs">
          <p>carbs</p>
          <div class="m-bar">
            <div class="progress"></div>
          </div>
          <p>153 gr <small> /50</small></p>
        </div>
      </div>

    </div>

    <section>   
      
      <% if (locals.foods) foods.forEach(obj => { %>

        <div class="logs card" id="N<%= obj.id %>">
          <div class="fimg"><img src="/icons/<%= obj.icon %>" alt="food image" width="100%"></div>
          <div class="vert-row"></div>
          <div class="finfo">
            <div class="up">
              <p><%= obj.name %></p>
              <button onclick="displayInput(this)" class="fg" id="fg<%= obj.id %>" ><%= obj.gr %>g</button>
              <form class="edit-form" action="/update" method="post" id="ef<%= obj.id %>">
                <input type="number" inputmode="numeric" id="inp<%= obj.id %>" onblur="updateGrams(this)" name="grams" />
                <input type="hidden" name="food" value="<%= obj.id %>" />
              </form>
              <div class="del">
                <button onclick="displayBtn(this)" id="D<%= obj.id %>">...</button>
              </div>
              <form action="/delete" method="post">
                <button id="T<%= obj.id %>" name="id" value="<%= obj.id %>">del</button>
              </form>          
            </div>
            <div class="down">
              <div class="fcal">
                <p><%= Math.round((obj.cal*(obj.gr/100))*10)/10 %>cal</p>
              </div>
              <div class="fmacros">
                <div class="p"><p><%= Math.round((obj.prot*(obj.gr/100))*10)/10 %>p</p></div>
                <div class="f"><p><%= Math.round((obj.fat*(obj.gr/100))*10)/10 %>f</p></div>
                <div class="c"><p><%= Math.round((obj.carb*(obj.gr/100))*10)/10 %>c</p></div>
              </div>
            </div>
          </div>
        </div>

      <%}); if (foods.length == 0) {%>
        <h1 style="text-align:center;">You have no entries</h1>
        <div id="edit-form-container">
          <img id="empty-logs" src="/icons/no-task.png" />
        </div>
        <% } %>
        
      </section>
  </div>
  
  <%- include('partials/navbar') %>
  
  
  
  
  
  
  
  
  <script>
    
    const user = {
      weight: parseFloat(`<%= info.weight %>`),
      height: parseFloat(`<%= info.height %>`),
      activity: `<%= info.act %>`,
      gender: `<%= info.gend %>`,
      goal: `<%= info.goa %>`,
      birth: parseInt(`<%= info.birth_year %>`),
    }

    const foodData = <%- JSON.stringify(foods) %>;

    const progressCircle = document.querySelector('#circle');
    const calories = document.querySelector('#circle p');
    const prot = document.querySelector('#total-macros #protein .progress');
    const fats = document.querySelector('#total-macros #fats .progress');
    const carbs = document.querySelector('#total-macros #carbs .progress');
    const prothtml = document.querySelector('#protein p:last-child');
    const fatshtml = document.querySelector('#fats p:last-child');
    const carbshtml = document.querySelector('#carbs p:last-child');
    
    //Sum macros and cal
    var sumCal = 0;
    var sumProt = 0;
    var sumFat = 0;
    var sumCarb = 0;
    foodData.forEach(obj => {
      console.log(obj.cal*obj.gr/100);
      sumCal += Math.round(obj.cal*obj.gr/100);
      sumProt += Math.round(obj.prot*obj.gr/100);
      sumFat += Math.round(obj.fat*obj.gr/100);
      sumCarb += Math.round(obj.carb*obj.gr/100);
    });
    

    const caloriesG =  calcUserCalories(user);
    const goal = calcUserMacros(user);

    const caloriesP = ((sumCal*100)/caloriesG);
    const percentage = {
      protein: ((sumProt*100)/goal.protein),
      fats: ((sumFat*100)/goal.fats),
      carbs: ((sumCarb*100)/goal.carbs)
    }

    const conicGradient = `conic-gradient( #0073C3 ${caloriesP}%, #0073C30a ${caloriesP}%)`;

    progressCircle.style.background = conicGradient;
    calories.innerHTML = `${sumCal} cal <br /> <span>/${caloriesG}</span>`;

    //calc macro progress bars
    prot.style.width = `${percentage.protein}%`;
    fats.style.width = `${percentage.fats}%`;
    carbs.style.width = `${percentage.carbs}%`;

    //Update macros goal
    prothtml.innerHTML = `${sumProt} gr <small> /${goal.protein}</small>`;
    fatshtml.innerHTML = `${sumFat} gr <small> /${goal.fats}</small>`;
    carbshtml.innerHTML = `${sumCarb} gr <small> /${goal.carbs}</small>`;

    //Update overflowed macros colors
    if (percentage.protein>=120) {
      prot.style.background = "#ff000079";
      prot.style.boxShadow = "0 0 5px #ff000079";
    };
    if (percentage.fats>=120) {
      fats.style.background = "#ff000079";
      fats.style.boxShadow = "0 0 5px #ff000079";
    };
    if (percentage.carbs>=120) {
      carbs.style.background = "#ff000079";
      carbs.style.boxShadow = "0 0 5px #ff000079";
    };
    if (sumCal - caloriesG>=500) {
      progressCircle.style.background = "#ff000079";
      progressCircle.style.boxShadow = "0 0 10px #ff000079";
    }

    //Delete logs
    function displayBtn(D) {
      const btn = document.querySelector(`.up form #T${D.id.match(/\d+/)[0]}`);
      btn.style.display = "block";
      setTimeout(() => {btn.style.display = "none"}, 3000);
    }

    //Edit logs
    function displayInput(btn) {
      const inp = document.querySelector(`.up #inp${btn.id.match(/\d+/)[0]}`);
      btn.style.display = "none";
      inp.style.display = "block";
      inp.focus();
    }
    function updateGrams(inp) {
      if (inp.value) {
        document.querySelector(`.up #ef${inp.id.match(/\d+/)[0]}`).submit();
      } else {
        const btn = document.querySelector(`.up #fg${inp.id.match(/\d+/)[0]}`);
        inp.style.display = "none";
        btn.style.display = "block";
      }
    }

    function calcUserCalories(user) {
      
      var bmr
      if (user.gender=="MALE") {
        bmr = 88.362 + (13.4 * user.weight) + (4.8 * user.height) - (5.677 * (new Date().getFullYear() - user.birth)) ;
      } else {
        bmr = 447.593 + (9.247 * user.weight) + (3.1 * user.height) - (4.33 * (new Date().getFullYear() - user.birth)) ;
      }
      
      var cal;
      
      switch (user.activity) {
        case "SEDENTARY":
          cal = bmr * 1.2
        break;
        case "LIGHTLY ACTIVE":
          cal = bmr * 1.375;
        break;
        case "MODERATELY ACTIVE":
          cal = bmr * 1.55;
        break;
        case "VERY ACTIVE":
          cal = bmr * 1.725;
        break;
        case "SUPER ACTIVE":
          cal = bmr * 1.9;
        break;
        
        default:
          cal = bmr * 0;
          break;
        }
        
        if (user.goal=="LOSE FAT") {
          cal -= 500;
        } else if (user.goal=="GAIN MUSCLE") {
          cal += 500;
        }

      return Math.round(cal/10)*10;

    }

    function calcUserMacros(user) {
      
      const goal = {
        protein: Math.round(caloriesG * 0.25 / 4),
        fats: Math.round(caloriesG * 0.25 / 9),
        carbs: Math.round(caloriesG * 0.25 / 4),
      }

      if (user.goal=="LOSE FAT") {
          goal.protein = Math.round(caloriesG * 0.35 / 4);
          goal.fats = Math.round(caloriesG * 0.25 / 9);
          goal.carbs = Math.round(caloriesG * 0.4 / 4);
        } else if (user.goal=="GAIN MUSCLE") {
          goal.protein = Math.round(caloriesG * 0.25 / 4);
          goal.fats = Math.round(caloriesG * 0.25 / 9);
          goal.carbs = Math.round(caloriesG * 0.5 / 4);

        }

      return goal
    }

    console.table(user);

    console.log(new Date().toISOString().slice(0,10));


  </script>

  <%- include('partials/footer') %>